#!/usr/bin/env python
# -*- coding: UTF8 -*-
#
# RaccoonShow
# Written by Jono Bacon (jono@jonobacon.org)
#
# Licensed under the GNU Public License v2
# 
# This program is free software. See the included LICENSE file for details.

VERSION = "0.6"

import commands
import glob
import sys
import getopt

# deal with command line arguments

# a few defaults for the moment

class Backend:
	def __init__(self):
		self.currentdir = "/home/jono/swf"
		self.wavfile = ""
		self.pdffile = ""
		self.timesfile = ""
		self.times = list()

	def setPdfFile(self, setting):
		self.pdffile = setting

	def setWavFile(self, setting):
		self.wavfile = setting

	def setTimesFile(self, setting):
		self.timesfile = setting

		print "reading in times.txt..."
		timesfile = open(setting,"r")
		#self.times = list(x.rstrip("\n") for x in timesfile)
		self.times =  filter(lambda x: len(x.strip()) > 0, list(x.rstrip("\n") for x in timesfile) )

	def inputFileCheck(self):
		if self.pdffile == "":
			print "Error: You have not specified a PDF file - use the -p or --pdf-file options to do this"
			sys.exit(2)
		if self.wavfile == "":
			print "Error: You have not specified a WAV file - use the -w or --wav-file options to do this"
			sys.exit(2)
		if self.timesfile == "":
			print "Error: You have not specified a Times file - use the -t or --times-file options to do this"
			sys.exit(2)

	def checkImagesExist(self):
		if glob.glob('*slide.jpg'):
			return True
		else:
			return False

	def convertPdf(self, pdfcheck):
		if pdfcheck == True:
			print "pdf already converted"
		else:
			print "converting pdf to images..."
			commands.getoutput("gs -dNOPAUSE -dBATCH -sDEVICE=jpeg -sOutputFile=%03d_slide.jpg -r200 " + self.pdffile)

	def checkAudioSwfExists(self):
		try:
			open("processed-audio.swf")
			return True
		except IOError:
			return False

	def convertWav(self, soundcheck):
		if soundcheck == False:
			print "converting wav to swf..."
			commands.getoutput("wav2swf -o processed-audio.swf -l 0 " + self.wavfile)
		else:
			print "sound file already converted"

	def createScript(self):
		print "building presentation file..."

		filebuffer = ["# Presentation script, generated by RaccoonShow"]

		filebuffer.append(".flash filename=\"processed-images.swf\" version=5 fps=25")

		# append main images and times

		imageslisting = commands.getoutput("ls *slide*")
		images = imageslisting.split('\n')

		num = 1
		for im in images:
			filebuffer.append(".jpeg s" + str(num) + " \"" + im  + "\" quality=100%")
			num = num + 1

		# add timings settings

		filebuffer.append(".action: function slideShow() { nextFrame(); clearInterval(myint);} .end")
	
		num = 1
		lastsecs = 0;

		for t in self.times:
			secs = (int(float(t))*60) + ((float(t) - int(float(t)))*100)
			secint = secs - lastsecs 
			lastsecs = secs

			filebuffer.append(".frame " + str(num))
			filebuffer.append(".put s" + str(num) + " scalex=800 scaley=600")
			num = num + 1

			filebuffer.append(".action:")
			filebuffer.append("stop();")
			filebuffer.append("var myint = setInterval(slideShow, " + str(int(secint * 1000)) + " );")
			filebuffer.append(".end")


		filebuffer.append(".end");

		file = open("script.sc","w")

		file.write("\n".join(filebuffer))

		file.close()

	def checkImagesSwfExists(self):
		try:
			open("processed-images.swf")
			return True
		except IOError:
			return False

	def processScript(self, imagesswfcheck):
		if imagesswfcheck == False:
			print "converting images to swf..."
			commands.getoutput("swfc script.sc")
		else:
			print "images already converted to swf..."

	def combineFiles(self):
		print "combining files..."
		commands.getoutput("swfcombine -Tm processed-images.swf processed-audio.swf -o Presentation.swf")

	def clean(self):
		print self.pdffile
		commands.getoutput("rm *.swf")
		commands.getoutput("rm *.jpg")
		commands.getoutput("rm *.sc")

	def run(self):
		self.inputFileCheck()
		imgchk = self.checkImagesExist()
		self.convertPdf(imgchk)

		wavchk = self.checkAudioSwfExists()
		self.convertWav(wavchk)
		self.createScript()

		imgswf =  self.checkImagesSwfExists()
		self.processScript(imgswf)
		self.combineFiles()
def usage():
	print "Raccoon Show v" + VERSION
	print "Written by Jono Bacon raccoonshow AT jonobacon DOT org"
	print "\nUsage: raccoonshow [options]"
	print "\n-c, --clean\t\tRemove all generated files"
	print "-p, --pdf-file\t\tPDF file with the presentation slides"
	print "-t, --times-file\ta file containing a list of times"
	print "-w, --wav-file\t\tWAV file with the recorded audio"
	print "-v, --version\t\tDisplay the RacconShow version number"

def main(argv):
	back = Backend()

	try:                                
		opts, args = getopt.getopt(argv, "hcp:w:t:v", ["help", "debug", "pdf-file=", "wav-file=", "times-file="])
	except getopt.GetoptError:
		usage()
		sys.exit(2)                     

	for opt, arg in opts:
		if opt in ("-h", "--help"):
			usage()
			sys.exit()

		if opt in ("-c", "--clean"):
			back.clean()
			sys.exit()
		elif opt in ("-p", "--pdf-file"):
			back.setPdfFile(arg)
		elif opt in ("-w", "--wav-file"):
			back.setWavFile(arg)
		if opt in ("-t", "--times-file"):
			back.setTimesFile(arg)
		if opt in ("-v", "--version"):
			print "RaccoonShow v" + VERSION
			sys.exit()

	back.run()
if __name__ == "__main__":
	main(sys.argv[1:])
